{"version":3,"file":"static/js/531.28046fc6.chunk.js","mappings":"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","sources":["api/hooks/categories.mock.ts","api/hooks/login.mock.ts","api/hooks/member.mock.ts","api/hooks/products.mock.ts","api/hooks/wishlist.mock.ts","mocks/browser.ts"],"sourcesContent":["import { rest } from 'msw';\r\n\r\nimport { getCategoriesPath } from './useGetCategorys';\r\n\r\nexport const categoriesMockHandler = [\r\n  rest.get(getCategoriesPath(), (_, res, ctx) => {\r\n    return res(ctx.json(CATEGORIES_RESPONSE_DATA));\r\n  }),\r\n];\r\n\r\nconst CATEGORIES_RESPONSE_DATA = [\r\n  {\r\n    label: '생일',\r\n    imageURL:\r\n      'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Ft1.daumcdn.net%2Fgift%2Fhome%2Ftheme%2F292020231106_MXMUB.png',\r\n    title: '감동을 높여줄 생일 선물 리스트',\r\n    description: '예산에 쏙쏙 맞춰 AI가 자동으로 추천드려요!',\r\n    backgroundColor: '#5949a3',\r\n    categoryId: 2920,\r\n  },\r\n  {\r\n    label: '교환권',\r\n    title: '놓치면 후회할 교환권 특가',\r\n    backgroundColor: '#9290C3',\r\n    imageURL:\r\n      'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Fst.kakaocdn.net%2Fproduct%2Fgift%2Fproduct%2F20240131153049_5a22b137a8d346e9beb020a7a7f4254a.jpg',\r\n    categoryId: 2930,\r\n  },\r\n];\r\n","import { rest } from 'msw';\r\n\r\ninterface User {\r\n  email: string;\r\n  password: string;\r\n  mockToken: string;\r\n}\r\n\r\ninterface LoginRequestBody {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst userMockList: User[] = [\r\n  {\r\n    email: 'test',\r\n    password: 'test',\r\n    mockToken: 'mock-token',\r\n  },\r\n];\r\n\r\nexport const loginHandlers = [\r\n  rest.post('/api/members/login', async (req, res, ctx) => {\r\n    const { email, password }: LoginRequestBody = await req.json();\r\n\r\n    const foundUser = userMockList.find((user) => user.email === email);\r\n\r\n    if (foundUser && foundUser.password === password) {\r\n      return res(\r\n        ctx.status(200),\r\n        ctx.json({\r\n          email: foundUser.email,\r\n          token: foundUser.mockToken,\r\n        }),\r\n      );\r\n    }\r\n\r\n    return res(ctx.status(403), ctx.json({ message: 'Invalid email or password' }));\r\n  }),\r\n];\r\n","import { rest } from 'msw';\r\n\r\ninterface User {\r\n  email: string;\r\n  password: string;\r\n  mockToken: string;\r\n}\r\n\r\nconst userMockList: User[] = [\r\n  {\r\n    email: 'test',\r\n    password: 'test',\r\n    mockToken: 'mock-token',\r\n  },\r\n];\r\n\r\nexport const memberMockHandler = [\r\n  rest.post('/api/members/register', async (req, res, ctx) => {\r\n    try {\r\n      const { email, password } = await req.json();\r\n      if (!email || !password) {\r\n        return await res(ctx.status(400), ctx.json({ message: 'Invalid input' }));\r\n      }\r\n\r\n      const foundUser = userMockList.find((user) => user.email === email);\r\n\r\n      if (foundUser && foundUser.password === password) {\r\n        return await res(\r\n          ctx.status(201),\r\n          ctx.json({\r\n            email,\r\n            token: foundUser.mockToken,\r\n          }),\r\n        );\r\n      } else {\r\n        return await res(ctx.status(400), ctx.json({ message: 'Invalid input' }));\r\n      }\r\n    } catch (error) {\r\n      return res(ctx.status(400), ctx.json({ message: 'Invalid input' }));\r\n    }\r\n  }),\r\n];\r\n","import { rest } from 'msw';\r\n\r\nimport { getProductDetailPath } from './useGetProductDetail';\r\nimport { getProductOptionsPath } from './useGetProductOptions';\r\nimport { getProductsPath } from './useGetProducts';\r\n\r\nexport const productsMockHandler = [\r\n  rest.get(\r\n    getProductsPath({\r\n      categoryId: '2920',\r\n    }),\r\n    (_, res, ctx) => {\r\n      return res(ctx.json(PRODUCTS_MOCK_DATA));\r\n    },\r\n  ),\r\n  rest.get(\r\n    getProductsPath({\r\n      categoryId: '2930',\r\n    }),\r\n    (_, res, ctx) => {\r\n      return res(ctx.json(PRODUCTS_MOCK_DATA));\r\n    },\r\n  ),\r\n  rest.get(getProductDetailPath(':productId'), (req, res, ctx) => {\r\n    const { productId } = req.params;\r\n    const product = PRODUCTS_MOCK_DATA.resultData.find((p) => p.id === Number(productId));\r\n    if (product) {\r\n      return res(ctx.json(product));\r\n    } else {\r\n      return res(ctx.status(404), ctx.json({ message: 'Product not found' }));\r\n    }\r\n  }),\r\n  rest.get(getProductOptionsPath(':productId'), (_, res, ctx) => {\r\n    return res(\r\n      ctx.json([\r\n        {\r\n          id: 1,\r\n          name: 'Option A',\r\n          quantity: 10,\r\n          productId: 1,\r\n        },\r\n        {\r\n          id: 2,\r\n          name: 'Option B',\r\n          quantity: 20,\r\n          productId: 1,\r\n        },\r\n      ]),\r\n    );\r\n  }),\r\n];\r\n\r\nconst PRODUCTS_MOCK_DATA = {\r\n  resultData: [\r\n    {\r\n      id: 3245119,\r\n      name: '[단독각인] 피렌체 1221 에디션 오드코롱 50ml (13종 택1)',\r\n      imageUrl:\r\n        'https://st.kakaocdn.net/product/gift/product/20240215083306_8e1db057580145829542463a84971ae3.png',\r\n      price: 145000,\r\n      createdAt: '2024-08-01T08:20:04.078Z',\r\n      updatedAt: '2024-08-01T08:20:04.078Z',\r\n      wishUserId: [1, 2, 3],\r\n      categoryId: 2920,\r\n      optionsId: [101, 102],\r\n    },\r\n    {\r\n      id: 2263833,\r\n      name: '외식 통합권 10만원권',\r\n      imageUrl:\r\n        'https://st.kakaocdn.net/product/gift/product/20200513102805_4867c1e4a7ae43b5825e9ae14e2830e3.png',\r\n      price: 100000,\r\n      createdAt: '2024-08-01T08:20:04.078Z',\r\n      updatedAt: '2024-08-01T08:20:04.078Z',\r\n      wishUserId: [1, 3],\r\n      categoryId: 2920,\r\n      optionsId: [103, 104],\r\n    },\r\n    {\r\n      id: 6502823,\r\n      name: '[선물포장/미니퍼퓸증정] 디켄터 리드 디퓨저 300ml + 메세지카드',\r\n      imageUrl:\r\n        'https://st.kakaocdn.net/product/gift/product/20240215112140_11f857e972bc4de6ac1d2f1af47ce182.jpg',\r\n      price: 108000,\r\n      createdAt: '2024-08-01T08:20:04.078Z',\r\n      updatedAt: '2024-08-01T08:20:04.078Z',\r\n      wishUserId: [1, 3],\r\n      categoryId: 2930,\r\n      optionsId: [105, 106],\r\n    },\r\n    {\r\n      id: 1181831,\r\n      name: '[선물포장] 소바쥬 오 드 뚜왈렛 60ML',\r\n      imageUrl:\r\n        'https://st.kakaocdn.net/product/gift/product/20240214150740_ad25267defa64912a7c030a7b57dc090.jpg',\r\n      price: 122000,\r\n      createdAt: '2024-08-01T08:20:04.078Z',\r\n      updatedAt: '2024-08-01T08:20:04.078Z',\r\n      wishUserId: [1, 2],\r\n      categoryId: 2930,\r\n      optionsId: [107, 108],\r\n    },\r\n    {\r\n      id: 1379982,\r\n      name: '[정관장] 홍삼정 에브리타임 리미티드 (10ml x 30포)',\r\n      imageUrl:\r\n        'https://st.kakaocdn.net/product/gift/product/20240118135914_a6e1a7442ea04aa49add5e02ed62b4c3.jpg',\r\n      price: 133000,\r\n      createdAt: '2024-08-01T08:20:04.078Z',\r\n      updatedAt: '2024-08-01T08:20:04.078Z',\r\n      wishUserId: [1, , 3],\r\n      categoryId: 2930,\r\n      optionsId: [109, 110],\r\n    },\r\n  ],\r\n  number: 0,\r\n  totalElements: 5,\r\n  size: 10,\r\n  last: true,\r\n};\r\n","import type { RequestHandler } from 'msw';\r\nimport { rest } from 'msw';\r\n\r\nconst MOCK_TOKEN = 'valid-token';\r\n\r\nexport const addWishHandler: RequestHandler = rest.post('/api/wishes', async (req, res, ctx) => {\r\n  const authHeader = req.headers.get('Authorization');\r\n  const token = authHeader ? authHeader.replace('Bearer ', '') : '';\r\n\r\n  if (token !== MOCK_TOKEN) {\r\n    return res(ctx.status(401), ctx.json({ message: 'Invalid or missing token' }));\r\n  }\r\n\r\n  try {\r\n    const { productId } = (await req.json()) as { productId: number };\r\n\r\n    if (!productId) {\r\n      return await res(ctx.status(400), ctx.json({ message: 'Invalid input' }));\r\n    }\r\n\r\n    return await res(ctx.status(201), ctx.json({ id: 1, productId }));\r\n  } catch (err) {\r\n    return res(ctx.status(400), ctx.json({ message: 'Invalid input' }));\r\n  }\r\n});\r\n\r\nexport const deleteWishHandler: RequestHandler = rest.delete(\r\n  '/api/wishes/:wishId',\r\n  (req, res, ctx) => {\r\n    const authHeader = req.headers.get('Authorization');\r\n    const token = authHeader ? authHeader.replace('Bearer ', '') : '';\r\n\r\n    if (token !== MOCK_TOKEN) {\r\n      return res(ctx.status(401), ctx.json({ message: 'Invalid or missing token' }));\r\n    }\r\n\r\n    return res(ctx.status(204));\r\n  },\r\n);\r\n\r\nexport const getWishesHandler: RequestHandler = rest.get('/api/wishes', (req, res, ctx) => {\r\n  const authHeader = req.headers.get('Authorization');\r\n  const token = authHeader ? authHeader.replace('Bearer ', '') : '';\r\n\r\n  if (token !== MOCK_TOKEN) {\r\n    return res(ctx.status(401), ctx.json({ message: 'Invalid or missing token' }));\r\n  }\r\n\r\n  const page = parseInt(req.url.searchParams.get('page') || '0', 10);\r\n  const size = parseInt(req.url.searchParams.get('size') || '10', 10);\r\n\r\n  const PRODUCTS_MOCK_DATA = [\r\n    {\r\n      id: 3245119,\r\n      name: '[단독각인] 피렌체 1221 에디션 오드코롱 50ml (13종 택1)',\r\n      imageUrl:\r\n        'https://st.kakaocdn.net/product/gift/product/20240215083306_8e1db057580145829542463a84971ae3.png',\r\n      price: 145000,\r\n    },\r\n    {\r\n      id: 2263833,\r\n      name: '외식 통합권 10만원권',\r\n      imageUrl:\r\n        'https://st.kakaocdn.net/product/gift/product/20200513102805_4867c1e4a7ae43b5825e9ae14e2830e3.png',\r\n      price: 100000,\r\n    },\r\n    {\r\n      id: 6502823,\r\n      name: '[선물포장/미니퍼퓸증정] 디켄터 리드 디퓨저 300ml + 메세지카드',\r\n      imageUrl:\r\n        'https://st.kakaocdn.net/product/gift/product/20240215112140_11f857e972bc4de6ac1d2f1af47ce182.jpg',\r\n      price: 108000,\r\n    },\r\n  ];\r\n\r\n  return res(\r\n    ctx.status(200),\r\n    ctx.json({\r\n      content: PRODUCTS_MOCK_DATA.map((product) => ({\r\n        id: product.id,\r\n        product,\r\n      })),\r\n      pageable: {\r\n        sort: { sorted: true, unsorted: false, empty: false },\r\n        pageNumber: page,\r\n        pageSize: size,\r\n        offset: page * size,\r\n        unpaged: false,\r\n        paged: true,\r\n      },\r\n      totalPages: 5,\r\n      totalElements: 50,\r\n      last: page === 4,\r\n      number: page,\r\n      size,\r\n      numberOfElements: PRODUCTS_MOCK_DATA.length,\r\n      first: page === 0,\r\n      empty: PRODUCTS_MOCK_DATA.length === 0,\r\n    }),\r\n  );\r\n});\r\n","import { setupWorker } from 'msw';\r\n\r\nimport { categoriesMockHandler } from '@/api/hooks/categories.mock';\r\nimport { loginHandlers } from '@/api/hooks/login.mock';\r\nimport { memberMockHandler } from '@/api/hooks/member.mock';\r\nimport { productsMockHandler } from '@/api/hooks/products.mock';\r\nimport { addWishHandler, deleteWishHandler, getWishesHandler } from '@/api/hooks/wishlist.mock';\r\n\r\nexport const worker = setupWorker(\r\n  ...categoriesMockHandler,\r\n  ...productsMockHandler,\r\n  ...memberMockHandler,\r\n  ...loginHandlers,\r\n  addWishHandler,\r\n  deleteWishHandler,\r\n  getWishesHandler,\r\n);\r\n"],"names":["categoriesMockHandler","rest","get","getCategoriesPath","_","res","ctx","json","CATEGORIES_RESPONSE_DATA","label","imageURL","title","description","backgroundColor","categoryId","userMockList","email","password","mockToken","loginHandlers","post","async","req","foundUser","find","user","status","token","message","memberMockHandler","error","productsMockHandler","getProductsPath","PRODUCTS_MOCK_DATA","getProductDetailPath","productId","params","product","resultData","p","id","Number","getProductOptionsPath","name","quantity","imageUrl","price","createdAt","updatedAt","wishUserId","optionsId","number","totalElements","size","last","MOCK_TOKEN","addWishHandler","authHeader","headers","replace","err","deleteWishHandler","delete","getWishesHandler","page","parseInt","url","searchParams","content","map","pageable","sort","sorted","unsorted","empty","pageNumber","pageSize","offset","unpaged","paged","totalPages","numberOfElements","length","first","worker","setupWorker"],"sourceRoot":""}